[gd_scene load_steps=22 format=3 uid="uid://c2qvls07vc0m4"]

[ext_resource type="Script" path="res://scripts/pickups/weapon_pickup.gd" id="1_lyn61"]
[ext_resource type="PackedScene" uid="uid://bpmahfi65ka5j" path="res://weapons/lever_shotguns/lever_shotguns.tscn" id="2_0g404"]
[ext_resource type="AudioStream" uid="uid://dxscywpf2ven0" path="res://audio/streams/pickups/pickup_weapon.wav" id="3_ek1ht"]
[ext_resource type="Material" uid="uid://b78l63b32udy2" path="res://effects/halos/halo_mat.tres" id="4_417mx"]
[ext_resource type="Texture2D" uid="uid://hk0k2coukjwc" path="res://effects/halos/halo_tex.tres" id="5_ix035"]
[ext_resource type="Script" path="res://scripts/effects/halo.gd" id="6_5hcp2"]
[ext_resource type="PackedScene" uid="uid://5ta546kfi5yj" path="res://weapons/lever_shogtun/lever_shotgun.glb" id="7_nh46y"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_uc2sx"]
height = 1.0
radius = 0.25

[sub_resource type="SphereShape3D" id="SphereShape3D_0epo4"]
radius = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_hv0iq"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(1, 1, 0, 0.501961)
albedo_texture = ExtResource("5_ix035")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[sub_resource type="QuadMesh" id="QuadMesh_e6p1o"]
material = SubResource("StandardMaterial3D_hv0iq")
size = Vector2(0.2, 0.2)

[sub_resource type="Shader" id="Shader_snc4y"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nj27s"]
render_priority = 0
shader = SubResource("Shader_snc4y")
shader_parameter/albedo = Color(0.3, 0.3, 0.3, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="Shader" id="Shader_bav83"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_nearest,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform float clearcoat : hint_range(0,1);
uniform float clearcoat_roughness : hint_range(0,1);
uniform sampler2D texture_clearcoat : hint_default_white,filter_nearest,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

//global uniform float viewmodel_fov;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;

	//float onetanfov = 1.0f / tan(0.5f * (viewmodel_fov * PI / 180.0f));
	//float aspect = VIEWPORT_SIZE.x / VIEWPORT_SIZE.y;
	// modify projection matrix
	//PROJECTION_MATRIX[1][1] = -onetanfov;
	//PROJECTION_MATRIX[0][0] = onetanfov / aspect;

	// draws the viewmodel over everything (disable if you want dof near on viewmodel)
	//POSITION = PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX.xyz, 1.0);
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
	//POSITION.z = mix(POSITION.z, 0.9, 0.5);
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	vec2 clearcoat_tex = texture(texture_clearcoat,base_uv).xy;
	CLEARCOAT = clearcoat*clearcoat_tex.x;	CLEARCOAT_ROUGHNESS = clearcoat_roughness*clearcoat_tex.y;
}
"

[sub_resource type="Gradient" id="Gradient_v5jf5"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.2, 0.5, 0.7)
colors = PackedColorArray(0.278431, 0.172549, 0.0470588, 1, 0.341176, 0.207843, 0.0784314, 1, 0.447059, 0.298039, 0.14902, 1, 0.415686, 0.313726, 0.145098, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_q3vr3"]
frequency = 0.1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ti8ho"]
width = 128
height = 128
generate_mipmaps = false
seamless_blend_skirt = 1.0
color_ramp = SubResource("Gradient_v5jf5")
noise = SubResource("FastNoiseLite_q3vr3")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ifyxs"]
width = 128
height = 128
generate_mipmaps = false
seamless_blend_skirt = 1.0
as_normal_map = true
bump_strength = 1.0
noise = SubResource("FastNoiseLite_q3vr3")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lgfdv"]
render_priority = 0
shader = SubResource("Shader_bav83")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.75
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/clearcoat = 1.0
shader_parameter/clearcoat_roughness = 0.25
shader_parameter/uv1_scale = Vector3(0.25, 1, 0.25)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_ti8ho")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_ifyxs")

[sub_resource type="Animation" id="Animation_wivti"]
resource_name = "anim"
length = 10.0
loop_mode = 1
tracks/0/type = "rotation_3d"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0, 0, 0, 1, 2.5, 1, 0, 0.707, 0, 0.707, 5, 1, 0, 1, 0, 0, 7.5, 1, 0, -0.707, 0, 0.707, 10, 1, 0, 0, 0, 1)
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 0, 0, 2.5, 1, 0, 0.05, 0, 5, 1, 0, 0, 0, 7.5, 1, 0, 0.05, 0, 10, 1, 0, 0, 0)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4pudi"]
_data = {
"anim": SubResource("Animation_wivti")
}

[node name="SluggersPickup" type="RigidBody3D"]
collision_layer = 8
lock_rotation = true
script = ExtResource("1_lyn61")
weapon = ExtResource("2_0g404")
starting_ammo = 15
event_string = "pickup.weap.sluggers"
flash_color = Color(1, 1, 0, 1)
pickup_sound = ExtResource("3_ek1ht")
pickup_text = "Acquired an AKM (and 45 rounds)"

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CylinderShape3D_uc2sx")

[node name="Area3D" type="Area3D" parent="."]
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.4, 0)
shape = SubResource("SphereShape3D_0epo4")

[node name="LensFlare" type="MeshInstance3D" parent="Area3D"]
layers = 2
material_override = ExtResource("4_417mx")
visibility_range_end = 100.0
visibility_range_end_margin = 10.0
visibility_range_fade_mode = 1
mesh = SubResource("QuadMesh_e6p1o")
script = ExtResource("6_5hcp2")
color = Color(1, 1, 0, 1)

[node name="Node3D" type="Node3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 0.707107, -0.707107, 0, 0.707107, 0.707107, 0, 0, 0)

[node name="lever_shotgun" parent="Area3D/Node3D" instance=ExtResource("7_nh46y")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.025, -0.0883975, -0.353109)

[node name="Shotgun" parent="Area3D/Node3D/lever_shotgun" index="0"]
material_override = SubResource("ShaderMaterial_nj27s")

[node name="Lever" parent="Area3D/Node3D/lever_shotgun/Shotgun" index="0"]
material_override = SubResource("ShaderMaterial_nj27s")

[node name="WoodSide" parent="Area3D/Node3D/lever_shotgun/Shotgun" index="1"]
material_override = SubResource("ShaderMaterial_lgfdv")

[node name="Node3D2" type="Node3D" parent="Area3D"]
transform = Transform3D(-1, 4.37114e-08, 7.57103e-08, -2.26267e-08, 0.707107, -0.707107, -8.44439e-08, -0.707107, -0.707107, 0, 0, 0)

[node name="lever_shotgun" parent="Area3D/Node3D2" instance=ExtResource("7_nh46y")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.025, -0.0883975, -0.353109)

[node name="Shotgun" parent="Area3D/Node3D2/lever_shotgun" index="0"]
material_override = SubResource("ShaderMaterial_nj27s")

[node name="Lever" parent="Area3D/Node3D2/lever_shotgun/Shotgun" index="0"]
material_override = SubResource("ShaderMaterial_nj27s")

[node name="WoodSide" parent="Area3D/Node3D2/lever_shotgun/Shotgun" index="1"]
material_override = SubResource("ShaderMaterial_lgfdv")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Area3D")
libraries = {
"": SubResource("AnimationLibrary_4pudi")
}

[editable path="Area3D/Node3D/lever_shotgun"]
[editable path="Area3D/Node3D2/lever_shotgun"]
