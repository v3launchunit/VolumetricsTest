[gd_scene load_steps=8 format=3 uid="uid://bb5uwpa02yum4"]

[ext_resource type="Shader" uid="uid://djpltavpkhtmk" path="res://shaders/spatial/psx_pb_opaque.gdshader" id="1_l85lb"]

[sub_resource type="Shader" id="Shader_jpsk0"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kh444"]
render_priority = 0
shader = SubResource("Shader_jpsk0")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="CylinderMesh" id="CylinderMesh_0k12g"]
top_radius = 0.15
bottom_radius = 0.125
height = 1.0
radial_segments = 4

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8w7qw"]
render_priority = 0
shader = ExtResource("1_l85lb")
shader_parameter/albedo_col = Color(0, 0, 0, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/roughness = 0.75
shader_parameter/metallic = 0.0
shader_parameter/specular = 0.5
shader_parameter/metallic_channel = Vector4(1, 0, 0, 0)
shader_parameter/uv1_scale = Vector3(0, 0, 0)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/is_terrain_mat = false

[sub_resource type="SphereMesh" id="SphereMesh_qx7ja"]
radius = 0.125
height = 0.3
radial_segments = 4
rings = 4

[sub_resource type="CylinderMesh" id="CylinderMesh_gcc74"]
top_radius = 0.0
bottom_radius = 0.15
height = 0.25
radial_segments = 4

[node name="TrashLampPost" type="Node3D"]

[node name="Post" type="MeshInstance3D" parent="."]
layers = 8
material_override = SubResource("ShaderMaterial_kh444")
mesh = SubResource("CylinderMesh_0k12g")

[node name="Bulb" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.6, 0)
layers = 8
material_override = SubResource("ShaderMaterial_8w7qw")
mesh = SubResource("SphereMesh_qx7ja")
skeleton = NodePath("")

[node name="Cap" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.825, 0)
layers = 8
material_override = SubResource("ShaderMaterial_kh444")
mesh = SubResource("CylinderMesh_gcc74")
