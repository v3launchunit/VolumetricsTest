[gd_scene load_steps=11 format=3 uid="uid://cte8nigqju6x4"]

[ext_resource type="Texture2D" uid="uid://dq8085wgtcel5" path="res://objects/deco/fake_window/fake_window_emissions.png" id="1_c7uu4"]
[ext_resource type="Script" path="res://objects/deco/fake_window/fake_window.gd" id="1_wq8c4"]
[ext_resource type="Texture2D" uid="uid://dokrtkd3ksm7t" path="res://objects/deco/fake_window/fake_window_albedo.png" id="2_awe7g"]
[ext_resource type="ArrayMesh" uid="uid://1kx0yejeuwd0" path="res://models/objects/fake_window.obj" id="2_n560n"]
[ext_resource type="Texture2D" uid="uid://cjt80d3qcldfe" path="res://objects/deco/fake_window/fake_window_normals.png" id="4_258ra"]

[sub_resource type="Shader" id="Shader_35c4e"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_nearest, repeat_enable;
uniform sampler2D texture_albedo_b : source_color, filter_nearest, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_nearest, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_nearest, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_emission : source_color, hint_default_black, filter_nearest, repeat_enable;
instance uniform vec4 emission : source_color = vec4(1.0);
uniform float emission_energy : hint_range(0.0, 100.0, 0.01);

uniform sampler2D texture_normal : hint_roughness_normal, filter_nearest, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 albedo_b_tex = texture(texture_albedo_b, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb * albedo_b_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;

	// Emission: Enabled
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
	// Emission Operator: Multiply
	EMISSION = (emission.rgb * emission_tex) * emission_energy;
}
"

[sub_resource type="Gradient" id="Gradient_ehcww"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.375, 0.625)
colors = PackedColorArray(0.9, 0.9, 0.9, 1, 0.95, 0.95, 0.95, 1, 1, 1, 1, 1)
metadata/_snap_enabled = true
metadata/_snap_count = 8

[sub_resource type="FastNoiseLite" id="FastNoiseLite_buxic"]
frequency = 0.0915

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_xrmkr"]
width = 128
height = 128
color_ramp = SubResource("Gradient_ehcww")
noise = SubResource("FastNoiseLite_buxic")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lqv7k"]
render_priority = 0
shader = SubResource("Shader_35c4e")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/emission_energy = 1.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("2_awe7g")
shader_parameter/texture_albedo_b = SubResource("NoiseTexture2D_xrmkr")
shader_parameter/texture_emission = ExtResource("1_c7uu4")
shader_parameter/texture_normal = ExtResource("4_258ra")

[node name="FakeWindow" type="Node3D"]
script = ExtResource("1_wq8c4")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, -0.01)
layers = 8
material_override = SubResource("ShaderMaterial_lqv7k")
cast_shadow = 0
instance_shader_parameters/emission = Color(1, 1, 1, 1)
mesh = ExtResource("2_n560n")

[node name="SpotLight3D" type="SpotLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.025)
shadow_enabled = true
distance_fade_enabled = true
spot_angle = 87.5
