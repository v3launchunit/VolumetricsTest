[gd_scene load_steps=10 format=3 uid="uid://bhtbvqhf5jhvy"]

[ext_resource type="PackedScene" uid="uid://bowd2xtj7q4vd" path="res://scenes/objects/lights/lamp_tb.tscn" id="1_hl3is"]
[ext_resource type="Texture2D" uid="uid://c3ho4pll2ocil" path="res://effects/halos/fancier_halo.png" id="2_0t2ck"]
[ext_resource type="Material" uid="uid://by4h3hrepyr2o" path="res://bullets/metal_psx.tres" id="3_0t2ck"]
[ext_resource type="ArrayMesh" uid="uid://b2os77jql2tfp" path="res://objects/deco/mining_light_cage.obj" id="3_77cw0"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_y8qxt"]
albedo_color = Color(0, 0, 0, 1)

[sub_resource type="Shader" id="Shader_143fe"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
instance uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_17fub"]
render_priority = 0
shader = SubResource("Shader_143fe")
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(0, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="SphereMesh" id="SphereMesh_goire"]
material = SubResource("ShaderMaterial_17fub")
radius = 0.125
height = 0.5
radial_segments = 8
rings = 3

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wxhgy"]
resource_local_to_scene = true
render_priority = 100
transparency = 1
blend_mode = 1
depth_draw_mode = 2
no_depth_test = true
shading_mode = 0
disable_ambient_light = true
disable_fog = true
vertex_color_use_as_albedo = true
albedo_texture = ExtResource("2_0t2ck")
texture_filter = 1
disable_receive_shadows = true
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_min_distance = 2.5

[node name="Lamp" instance=ExtResource("1_hl3is")]
material_override = SubResource("StandardMaterial3D_y8qxt")
mesh = SubResource("SphereMesh_goire")

[node name="OmniLight3D" parent="." index="0"]
visible = false

[node name="LensFlare" parent="OmniLight3D" index="0"]
material_override = SubResource("StandardMaterial3D_wxhgy")

[node name="Cage" type="MeshInstance3D" parent="." index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.125, 1.09278e-08)
material_override = ExtResource("3_0t2ck")
mesh = ExtResource("3_77cw0")
